# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import alaska_pb2 as alaska__pb2


class AlaskerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRivers = channel.unary_unary(
                '/alaska.Alasker/GetRivers',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.Rivers.FromString,
                )
        self.GetRegions = channel.unary_unary(
                '/alaska.Alasker/GetRegions',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.Regions.FromString,
                )
        self.GetLakes = channel.unary_unary(
                '/alaska.Alasker/GetLakes',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.Lakes.FromString,
                )
        self.GetAirports = channel.unary_unary(
                '/alaska.Alasker/GetAirports',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.Airports.FromString,
                )
        self.GetBuildUps = channel.unary_unary(
                '/alaska.Alasker/GetBuildUps',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.BuiltUps.FromString,
                )
        self.GetTrees = channel.unary_unary(
                '/alaska.Alasker/GetTrees',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.Trees.FromString,
                )
        self.GetPipelines = channel.unary_unary(
                '/alaska.Alasker/GetPipelines',
                request_serializer=alaska__pb2.Feature.SerializeToString,
                response_deserializer=alaska__pb2.Pipelines.FromString,
                )


class AlaskerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRivers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRegions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLakes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAirports(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuildUps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipelines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlaskerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRivers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRivers,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.Rivers.SerializeToString,
            ),
            'GetRegions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRegions,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.Regions.SerializeToString,
            ),
            'GetLakes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLakes,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.Lakes.SerializeToString,
            ),
            'GetAirports': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAirports,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.Airports.SerializeToString,
            ),
            'GetBuildUps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuildUps,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.BuiltUps.SerializeToString,
            ),
            'GetTrees': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrees,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.Trees.SerializeToString,
            ),
            'GetPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipelines,
                    request_deserializer=alaska__pb2.Feature.FromString,
                    response_serializer=alaska__pb2.Pipelines.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'alaska.Alasker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Alasker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRivers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetRivers',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.Rivers.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRegions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetRegions',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.Regions.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLakes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetLakes',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.Lakes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAirports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetAirports',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.Airports.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuildUps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetBuildUps',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.BuiltUps.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetTrees',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.Trees.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/alaska.Alasker/GetPipelines',
            alaska__pb2.Feature.SerializeToString,
            alaska__pb2.Pipelines.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
